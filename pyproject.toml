[project]
name = "media-metadata-backup-machine"
version = "0.1.0"
description = "Index movie collection and match with torrent metadata for backup purposes"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Josh Lebed", email = "joshlebed@example.com" }
]
keywords = ["media", "metadata", "backup", "movies", "torrent", "indexer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: System :: Archiving :: Backup",
]
dependencies = [
    "pyyaml>=6.0",
]

[project.scripts]
update-movies-index = "update_movies_index:main"

[tool.uv]
dev-dependencies = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "types-requests>=2.32.0",
]

[tool.ruff]
line-length = 100
target-version = "py39"
extend-exclude = ["MOVIES.md", "*.csv"]
fix = true
show-fixes = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "RUF",  # Ruff-specific rules
    "D",    # pydocstyle
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # function calls in argument defaults
    "C901",  # too complex
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = "dynamic"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
force-single-line = false
combine-as-imports = true
split-on-trailing-comma = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[tool.hatch.build.targets.wheel]
packages = ["."]
only-include = ["update_movies_index.py"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
